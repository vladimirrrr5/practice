import sys
import random
from PyQt5.QtWidgets import (QApplication, QMainWindow, QWidget, QVBoxLayout, QHBoxLayout, QGridLayout,
                            QLabel, QPushButton, QMessageBox, QScrollArea, QFrame, QSizePolicy)
from PyQt5.QtCore import Qt, QTimer, QPropertyAnimation, QEasingCurve
from PyQt5.QtGui import QFont, QColor, QPalette, QLinearGradient, QBrush

class MillionaireGame(QMainWindow):
    def __init__(self):
        super().__init__()
        self.setWindowTitle("–ö—Ç–æ —Ö–æ—á–µ—Ç —Å—Ç–∞—Ç—å –º–∏–ª–ª–∏–æ–Ω–µ—Ä–æ–º")
        self.setMinimumSize(1200, 700)
        
        # –î–∞–Ω–Ω—ã–µ –∏–≥—Ä—ã
        self.PRIZES = [
            500, 1_000, 2_000, 3_000, 5_000, 10_000, 20_000, 40_000, 80_000,
            160_000, 320_000, 640_000, 1_250_000, 2_500_000, 5_000_000
        ]
        
        self.QUESTIONS = [
            {"question": "–ö–∞–∫–æ–µ —Å–∞–º–æ–µ –±–æ–ª—å—à–æ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ –Ω–∞ –ó–µ–º–ª–µ?", "options": ["–°–ª–æ–Ω", "–°–∏–Ω–∏–π –∫–∏—Ç", "–ê–∫—É–ª–∞", "–ö—Ä–æ–∫–æ–¥–∏–ª"], 
             "answer": "–°–∏–Ω–∏–π –∫–∏—Ç", "illustration": "üêã"},
            {"question": "–ö–∞–∫–æ–π –≥–∞–∑ –º—ã –≤–¥—ã—Ö–∞–µ–º, —á—Ç–æ–±—ã –∂–∏—Ç—å?", "options": ["–ê–∑–æ—Ç", "–£–≥–ª–µ–∫–∏—Å–ª—ã–π –≥–∞–∑", "–ö–∏—Å–ª–æ—Ä–æ–¥", "–í–æ–¥–æ—Ä–æ–¥"], 
             "answer": "–ö–∏—Å–ª–æ—Ä–æ–¥", "illustration": "üå¨Ô∏è"},
            {"question": "–°–∫–æ–ª—å–∫–æ –ø–ª–∞–Ω–µ—Ç –≤ –°–æ–ª–Ω–µ—á–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ?", "options": ["7", "8", "9", "10"], 
             "answer": "8", "illustration": "ü™ê"},
            {"question": "–ö–∞–∫–æ–π –∫–æ–Ω—Ç–∏–Ω–µ–Ω—Ç —Å–∞–º—ã–π –±–æ–ª—å—à–æ–π?", "options": ["–ê—Ñ—Ä–∏–∫–∞", "–ê–∑–∏—è", "–ï–≤—Ä–æ–ø–∞", "–ê–Ω—Ç–∞—Ä–∫—Ç–∏–¥–∞"], 
             "answer": "–ê–∑–∏—è", "illustration": "üåè"},
            {"question": "–ö–∞–∫–æ–µ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–æ —Å–∞–º–æ–µ –º–∞–ª–µ–Ω—å–∫–æ–µ –≤ –º–∏—Ä–µ?", "options": ["–ú–æ–Ω–∞–∫–æ", "–ù–∞—É—Ä—É", "–í–∞—Ç–∏–∫–∞–Ω", "–°–∞–Ω-–ú–∞—Ä–∏–Ω–æ"], 
             "answer": "–í–∞—Ç–∏–∫–∞–Ω", "illustration": "üèõÔ∏è"},
            {"question": "–ö–∞–∫–æ–π –º–µ—Ç–∞–ª–ª —Å–∞–º—ã–π –ª–µ–≥–∫–∏–π?", "options": ["–ñ–µ–ª–µ–∑–æ", "–ê–ª—é–º–∏–Ω–∏–π", "–õ–∏—Ç–∏–π", "–ú–µ–¥—å"], 
            "answer": "–õ–∏—Ç–∏–π", "illustration": "‚öõÔ∏è"},
            {"question": "–°—Ç–æ–ª–∏—Ü–∞ –ê–≤—Å—Ç—Ä–∞–ª–∏–∏?", "options": ["–°–∏–¥–Ω–µ–π", "–ú–µ–ª—å–±—É—Ä–Ω", "–ö–∞–Ω–±–µ—Ä—Ä–∞", "–ë—Ä–∏—Å–±–µ–Ω"], 
            "answer": "–ö–∞–Ω–±–µ—Ä—Ä–∞", "illustration": "üá¶üá∫"},
            {"question": "–ö—Ç–æ –Ω–∞–ø–∏—Å–∞–ª '–í–æ–π–Ω–∞ –∏ –º–∏—Ä'?", "options": ["–¢–æ–ª—Å—Ç–æ–π", "–î–æ—Å—Ç–æ–µ–≤—Å–∫–∏–π", "–ü—É—à–∫–∏–Ω", "–ì–æ–≥–æ–ª—å"], 
            "answer": "–¢–æ–ª—Å—Ç–æ–π", "illustration": "üìö"},
            {"question": "–°–∫–æ–ª—å–∫–æ –æ–∫–µ–∞–Ω–æ–≤ –Ω–∞ –ó–µ–º–ª–µ?", "options": ["4", "5", "6", "7"], 
            "answer": "5", "illustration": "üåä"},
            {"question": "–°–∫–æ–ª—å–∫–æ —Ö—Ä–æ–º–æ—Å–æ–º —É —á–µ–ª–æ–≤–µ–∫–∞?", "options": ["42", "44", "46", "48"], 
            "answer": "46", "illustration": "üß¨"},
            {"question": "–ö–∞–∫–æ–π —Ö–∏–º–∏—á–µ—Å–∫–∏–π —ç–ª–µ–º–µ–Ω—Ç –æ–±–æ–∑–Ω–∞—á–∞–µ—Ç—Å—è —Å–∏–º–≤–æ–ª–æ–º Au?", "options": ["–°–µ—Ä–µ–±—Ä–æ", "–ê–ª—é–º–∏–Ω–∏–π", "–ó–æ–ª–æ—Ç–æ", "–£—Ä–∞–Ω"], 
            "answer": "–ó–æ–ª–æ—Ç–æ", "illustration": "ü•á"},
            {"question": "–ì–¥–µ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –ø–∏—Ä–∞–º–∏–¥—ã –ì–∏–∑—ã?", "options": ["–ú–µ–∫—Å–∏–∫–∞", "–ï–≥–∏–ø–µ—Ç", "–ò–Ω–¥–∏—è", "–ò—Ä–∞–∫"], 
            "answer": "–ï–≥–∏–ø–µ—Ç", "illustration": "üèúÔ∏è"},
            {"question": "–ö–∞–∫–æ–π —è–∑—ã–∫ —Å–∞–º—ã–π —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–Ω—ã–π –≤ –º–∏—Ä–µ?", "options": ["–ê–Ω–≥–ª–∏–π—Å–∫–∏–π", "–ò—Å–ø–∞–Ω—Å–∫–∏–π", "–ö–∏—Ç–∞–π—Å–∫–∏–π", "–ê—Ä–∞–±—Å–∫–∏–π"], 
            "answer": "–ö–∏—Ç–∞–π—Å–∫–∏–π", "illustration": "üåê"},
            {"question": "–ö–∞–∫–æ–π —Ü–≤–µ—Ç –ø–æ–ª—É—á–∞–µ—Ç—Å—è –ø—Ä–∏ —Å–º–µ—à–∏–≤–∞–Ω–∏–∏ —Å–∏–Ω–µ–≥–æ –∏ –∂—ë–ª—Ç–æ–≥–æ?", "options": ["–ó–µ–ª—ë–Ω—ã–π", "–û—Ä–∞–Ω–∂–µ–≤—ã–π", "–§–∏–æ–ª–µ—Ç–æ–≤—ã–π", "–ö–æ—Ä–∏—á–Ω–µ–≤—ã–π"], 
            "answer": "–ó–µ–ª—ë–Ω—ã–π", "illustration": "üé®"},
            {"question": "–ö—Ç–æ –ø–µ—Ä–≤—ã–π –ø–æ–ª–µ—Ç–µ–ª –≤ –∫–æ—Å–º–æ—Å?", "options": ["–ù–µ–π–ª –ê—Ä–º—Å—Ç—Ä–æ–Ω–≥", "–ì–∞–≥–∞—Ä–∏–Ω", "–ö–æ—Ä–æ–ª—ë–≤", "–¢–∏—Ç–æ–≤"], 
            "answer": "–ì–∞–≥–∞—Ä–∏–Ω", "illustration": "üöÄ"},
        ]
        
        # –°–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã
        self.current_question_index = 0
        self.used_5050 = False
        self.used_call = False
        self.seconds_left = 30
        self.timer = QTimer()
        
        self.init_ui()
        
    def init_ui(self):
        # –û—Å–Ω–æ–≤–Ω–æ–π —Å—Ç–µ–∫ –≤–∏–¥–∂–µ—Ç–æ–≤
        self.stack = QWidget()
        self.stack_layout = QVBoxLayout(self.stack)
        self.stack_layout.setContentsMargins(0, 0, 0, 0)
        
        # –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        self.main_menu = self.create_main_menu()
        self.stack_layout.addWidget(self.main_menu)
        
        # –≠–∫—Ä–∞–Ω –ø—Ä–∞–≤–∏–ª
        self.rules_screen = self.create_rules_screen()
        self.stack_layout.addWidget(self.rules_screen)
        
        # –≠–∫—Ä–∞–Ω —Ä–µ–π—Ç–∏–Ω–≥–∞
        self.rating_screen = self.create_rating_screen()
        self.stack_layout.addWidget(self.rating_screen)
        
        # –ò–≥—Ä–æ–≤–æ–π —ç–∫—Ä–∞–Ω
        self.game_screen = self.create_game_screen()
        self.stack_layout.addWidget(self.game_screen)
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        self.show_screen(self.main_menu)
        
        self.setCentralWidget(self.stack)
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç–∏–ª–µ–π
        self.setStyleSheet("""
            QWidget {
                background: qlineargradient(x1:0, y1:0, x2:1, y2:1, stop:0 #00008B, stop:1 #000000);
                color: white;
                font-family: Arial;
            }
            
            QPushButton {
                background-color: gold;
                color: black;
                border: none;
                padding: 15px 30px;
                font-size: 20px;
                border-radius: 10px;
                font-weight: bold;
            }
            
            QPushButton:hover {
                background-color: #FFD700;
            }
            
            QPushButton#small_btn {
                padding: 10px 20px;
                font-size: 16px;
                background-color: #4682B4;
                color: white;
            }
            
            QPushButton#exit_btn {
                background-color: #8B0000;
                color: white;
                border-radius: 30px;
                width: 60px;
                height: 60px;
                font-size: 24px;
            }
            
            QLabel#logo {
                font-size: 48px;
                font-weight: bold;
                margin-bottom: 30px;
            }
            
            QLabel#question {
                font-size: 24px;
                background-color: #4169E1;
                padding: 20px;
                border-radius: 10px;
            }
            
            QLabel#timer {
                font-size: 24px;
                background-color: #1E90FF;
                padding: 10px;
                border-radius: 20px;
                qproperty-alignment: AlignCenter;
            }
            
            QLabel#illustration {
                font-size: 72px;
                background-color: #00008B;
                padding: 20px;
                border-radius: 10px;
                qproperty-alignment: AlignCenter;
            }
            
            QFrame#panel {
                background-color: rgba(0, 0, 139, 0.7);
                border-radius: 10px;
            }
            
            QLabel#prize_item {
                padding: 8px;
                margin: 5px 0;
                border-radius: 5px;
            }
            
            QPushButton#hint_btn {
                background-color: #32CD32;
                color: white;
                padding: 10px;
                margin: 10px 0;
                border-radius: 5px;
                font-weight: bold;
            }
            
            QPushButton#hint_btn:disabled {
                background-color: gray;
            }
            
            QPushButton#option_btn {
                background-color: #1E3F66;
                color: white;
                padding: 15px;
                border-radius: 10px;
                font-size: 18px;
                border: 2px solid #2A4D7F;
                min-width: 280px;
                min-height: 70px;
                max-width: 280px;
                max-height: 70px;
                margin: 10px;
            }
            
            QPushButton#option_btn:hover {
                background-color: #2A4D7F;
            }
            
            QPushButton#option_btn:disabled {
                background-color: #333333;
                color: #888888;
            }
            
            QPushButton#option_btn_correct {
                background-color: #2E8B57;
                color: white;
            }
                QPushButton#exit_btn {
            background-color: #FF0000;
            color: white;
            border-radius: 30px;
            min-width: 60px;
            max-width: 60px;
            min-height: 60px;
            max-height: 60px;
            font-size: 24px;
            padding: 0;
            margin: 0;
            }
            
            QPushButton#exit_btn:hover {
                background-color: #CC0000;
        """)
    
    def create_main_menu(self):
        widget = QWidget()
        layout = QVBoxLayout(widget)
        layout.setAlignment(Qt.AlignCenter)
        
        # –õ–æ–≥–æ—Ç–∏–ø
        logo = QLabel("–ö—Ç–æ —Ö–æ—á–µ—Ç —Å—Ç–∞—Ç—å –º–∏–ª–ª–∏–æ–Ω–µ—Ä–æ–º")
        logo.setObjectName("logo")
        layout.addWidget(logo)
        
        # –ö–Ω–æ–ø–∫–∞ –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã
        start_btn = QPushButton("–ù–∞—á–∞—Ç—å –∏–≥—Ä—É")
        start_btn.clicked.connect(self.init_game)
        layout.addWidget(start_btn)
        
        # –ö–Ω–æ–ø–∫–∏ –ø—Ä–∞–≤–∏–ª –∏ —Ä–µ–π—Ç–∏–Ω–≥–∞
        btn_layout = QHBoxLayout()
        rules_btn = QPushButton("–ü—Ä–∞–≤–∏–ª–∞")
        rules_btn.setObjectName("small_btn")
        rules_btn.clicked.connect(lambda: self.show_screen(self.rules_screen))
        btn_layout.addWidget(rules_btn)
        
        rating_btn = QPushButton("–†–µ–π—Ç–∏–Ω–≥")
        rating_btn.setObjectName("small_btn")
        rating_btn.clicked.connect(lambda: self.show_screen(self.rating_screen))
        btn_layout.addWidget(rating_btn)
        
        layout.addLayout(btn_layout)
        
        # –ö–Ω–æ–ø–∫–∞ –≤—ã—Ö–æ–¥–∞
        exit_btn = QPushButton("‚úñ")
        exit_btn.setObjectName("exit_btn")
        exit_btn.clicked.connect(self.close)
        exit_btn.setFixedSize(60, 60)
        exit_btn.move(self.width() - 80, self.height() - 80)
        exit_btn = QPushButton("–í—ã—Ö–æ–¥")
        exit_btn.setObjectName("small_btn")
        exit_btn.clicked.connect(self.close)
        layout.addWidget(exit_btn)
        
        return widget
    
    def create_rules_screen(self):
        widget = QWidget()
        layout = QVBoxLayout(widget)
        layout.setAlignment(Qt.AlignCenter)
        
        # –ö–æ–Ω—Ç–µ–Ω—Ç –ø—Ä–∞–≤–∏–ª
        rules_content = QLabel()
        rules_content.setObjectName("panel")
        rules_content.setWordWrap(True)
        rules_content.setText("""
            <h2>–ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã</h2>
            <p>1. –í–∞–º –±—É–¥—É—Ç –∑–∞–¥–∞–Ω—ã 15 –≤–æ–ø—Ä–æ—Å–æ–≤ —Å 4 –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ –æ—Ç–≤–µ—Ç–∞.</p>
            <p>2. –ö–∞–∂–¥—ã–π –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –≤–∞—à –≤—ã–∏–≥—Ä—ã—à.</p>
            <p>3. –í–æ–ø—Ä–æ—Å—ã 5 –∏ 9 ‚Äî –Ω–µ—Å–≥–æ—Ä–∞–µ–º—ã–µ —Å—É–º–º—ã (5,000 ‚ÇΩ –∏ 80,000 ‚ÇΩ).</p>
            <p>4. –ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–æ–¥—Å–∫–∞–∑–∫–∏:</p>
            <ul>
                <li>50/50: —É–±–∏—Ä–∞–µ—Ç –¥–≤–∞ –Ω–µ–≤–µ—Ä–Ω—ã—Ö –æ—Ç–≤–µ—Ç–∞</li>
                <li>–ó–≤–æ–Ω–æ–∫ –¥—Ä—É–≥—É: –¥—Ä—É–≥ –ø–æ–¥—Å–∫–∞–∑—ã–≤–∞–µ—Ç –æ—Ç–≤–µ—Ç</li>
            </ul>
            <p>5. –ù–∞ –∫–∞–∂–¥—ã–π –≤–æ–ø—Ä–æ—Å –¥–∞—ë—Ç—Å—è 30 —Å–µ–∫—É–Ω–¥.</p>
            <p>–¶–µ–ª—å: –≤—ã–∏–≥—Ä–∞—Ç—å 5,000,000 ‚ÇΩ!</p>
        """)
        rules_content.setFixedWidth(800)
        layout.addWidget(rules_content)
        
        # –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥
        back_btn = QPushButton("–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é")
        back_btn.clicked.connect(lambda: self.show_screen(self.main_menu))
        layout.addWidget(back_btn)
        
        return widget
    
    def create_rating_screen(self):
        widget = QWidget()
        layout = QVBoxLayout(widget)
        layout.setAlignment(Qt.AlignCenter)
        
        # –ö–æ–Ω—Ç–µ–Ω—Ç —Ä–µ–π—Ç–∏–Ω–≥–∞
        rating_content = QLabel()
        rating_content.setObjectName("panel")
        rating_content.setText("""
            <h2>–¢–æ–ø –∏–≥—Ä–æ–∫–æ–≤</h2>
            <p>1. –ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤ ‚Äî 5,000,000 ‚ÇΩ</p>
            <p>2. –ê–Ω–Ω–∞ –°–º–∏—Ä–Ω–æ–≤–∞ ‚Äî 1,250,000 ‚ÇΩ</p>
            <p>3. –ê–ª–µ–∫—Å–µ–π –ò–≤–∞–Ω–æ–≤ ‚Äî 80,000 ‚ÇΩ</p>
            <p>4. –ú–∞—Ä–∏—è –°–æ–∫–æ–ª–æ–≤–∞ ‚Äî 5,000 ‚ÇΩ</p>
            <p>5. –î–º–∏—Ç—Ä–∏–π –ö—É–∑–Ω–µ—Ü–æ–≤ ‚Äî 3,000 ‚ÇΩ</p>
        """)
        rating_content.setFixedWidth(800)
        layout.addWidget(rating_content)
        
        # –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥
        back_btn = QPushButton("–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é")
        back_btn.clicked.connect(lambda: self.show_screen(self.main_menu))
        layout.addWidget(back_btn)
        
        return widget
    
    def create_game_screen(self):
        widget = QWidget()
        layout = QHBoxLayout(widget)
        layout.setContentsMargins(0, 0, 0, 0)
        
        # –õ–µ–≤–∞—è –ø–∞–Ω–µ–ª—å (–ø–æ–¥—Å–∫–∞–∑–∫–∏ –∏ —Ç–∞–π–º–µ—Ä)
        left_panel = QFrame()
        left_panel.setObjectName("panel")
        left_panel.setFixedWidth(250)
        left_layout = QVBoxLayout(left_panel)
        
        self.call_friend_btn = QPushButton("üìû –ó–≤–æ–Ω–æ–∫ –¥—Ä—É–≥—É")
        self.call_friend_btn.setObjectName("hint_btn")
        self.call_friend_btn.clicked.connect(self.call_friend)
        left_layout.addWidget(self.call_friend_btn)
        
        self.fifty_fifty_btn = QPushButton("50/50")
        self.fifty_fifty_btn.setObjectName("hint_btn")
        self.fifty_fifty_btn.clicked.connect(self.fifty_fifty)
        left_layout.addWidget(self.fifty_fifty_btn)
        
        self.timer_label = QLabel("30")
        self.timer_label.setObjectName("timer")
        self.timer_label.setFixedSize(60, 60)
        left_layout.addWidget(self.timer_label, alignment=Qt.AlignCenter)
        
        left_layout.addStretch()
        layout.addWidget(left_panel)
        
        # –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è –ø–∞–Ω–µ–ª—å (–≤–æ–ø—Ä–æ—Å –∏ –≤–∞—Ä–∏–∞–Ω—Ç—ã)
        center_panel = QWidget()
        center_layout = QVBoxLayout(center_panel)
        center_layout.setAlignment(Qt.AlignCenter)
        
        self.question_image = QLabel("üêã")
        self.question_image.setObjectName("illustration")
        center_layout.addWidget(self.question_image)
        
        self.question_text = QLabel("–¢–µ–∫—Å—Ç –≤–æ–ø—Ä–æ—Å–∞")
        self.question_text.setObjectName("question")
        self.question_text.setWordWrap(True)
        self.question_text.setFixedWidth(800)
        center_layout.addWidget(self.question_text)
        
        # –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –æ—Ç–≤–µ—Ç–æ–≤ —Å —Å–µ—Ç–∫–æ–π 2x2
        self.options_container = QWidget()
        self.options_layout = QGridLayout(self.options_container)
        self.options_layout.setSpacing(15)
        self.options_layout.setContentsMargins(20, 20, 20, 20)
        center_layout.addWidget(self.options_container)
        
        layout.addWidget(center_panel)
        
        # –ü—Ä–∞–≤–∞—è –ø–∞–Ω–µ–ª—å (–ø—Ä–∏–∑—ã)
        right_panel = QFrame()
        right_panel.setObjectName("panel")
        right_panel.setFixedWidth(250)
        right_layout = QVBoxLayout(right_panel)
        
        right_layout.addWidget(QLabel("<h3>–í–æ–ø—Ä–æ—Å—ã:</h3>"))
        
        self.prizes_list = QVBoxLayout()
        self.prizes_list.setAlignment(Qt.AlignTop)
        right_layout.addLayout(self.prizes_list)
        
        end_game_btn = QPushButton("–ó–∞–≤–µ—Ä—à–∏—Ç—å –∏–≥—Ä—É")
        end_game_btn.setObjectName("small_btn")
        end_game_btn.clicked.connect(self.confirm_end_game)
        right_layout.addWidget(end_game_btn)
        
        layout.addWidget(right_panel)
        
        return widget
    
    def init_game(self):
        self.current_question_index = 0
        self.used_5050 = False
        self.used_call = False
        
        # –ó–∞–ø–æ–ª–Ω—è–µ–º —Å–ø–∏—Å–æ–∫ –ø—Ä–∏–∑–æ–≤
        for i in reversed(range(self.prizes_list.count())): 
            self.prizes_list.itemAt(i).widget().setParent(None)
            
        for i, prize in enumerate(self.PRIZES):
            prize_item = QLabel(f"{i+1}. {prize:,} ‚ÇΩ")
            prize_item.setObjectName("prize_item")
            
            if i == 4 or i == 8:  # –ù–µ—Å–≥–æ—Ä–∞–µ–º—ã–µ —Å—É–º–º—ã
                prize_item.setStyleSheet("color: orange;")
            
            self.prizes_list.addWidget(prize_item)
        
        self.load_question()
        self.show_screen(self.game_screen)
    
    def load_question(self):
        if self.current_question_index >= len(self.QUESTIONS):
            self.end_game(True)
            return
        
        # –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è
        self.used_5050 = False
        self.used_call = False
        self.call_friend_btn.setDisabled(False)
        self.fifty_fifty_btn.setDisabled(False)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Ç–∞–π–º–µ—Ä
        self.seconds_left = 30
        self.update_timer_display()
        self.timer.stop()
        self.timer.timeout.connect(self.update_timer)
        self.timer.start(1000)
        
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –≤–æ–ø—Ä–æ—Å
        question = self.QUESTIONS[self.current_question_index]
        self.question_text.setText(question["question"])
        self.question_image.setText(question["illustration"])
        
        # –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤
        for i in reversed(range(self.options_layout.count())): 
            widget = self.options_layout.itemAt(i).widget()
            if widget:
                widget.setParent(None)
        
        # –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤
        shuffled_options = random.sample(question["options"], len(question["options"]))
        
        # –î–æ–±–∞–≤–ª—è–µ–º –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤ –≤ —Å–µ—Ç–∫—É 2x2
        for i, option in enumerate(shuffled_options):
            btn = QPushButton(option)
            btn.setObjectName("option_btn")
            btn.setFixedSize(280, 70)  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ä–∞–∑–º–µ—Ä
            btn.clicked.connect(lambda _, o=option, a=question["answer"]: self.check_answer(o, a))
            
            # –†–∞—Å–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ —Å–µ—Ç–∫–µ 2x2
            row = i // 2
            col = i % 2
            self.options_layout.addWidget(btn, row, col)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –ø—Ä–∏–∑–æ–≤
        self.update_prizes_display()
    
    def check_answer(self, selected_answer, correct_answer):
        self.timer.stop()
        
        # –ë–ª–æ–∫–∏—Ä—É–µ–º –≤—Å–µ –∫–Ω–æ–ø–∫–∏
        for i in range(self.options_layout.count()):
            btn = self.options_layout.itemAt(i).widget()
            btn.setDisabled(True)
            if btn.text() == correct_answer:
                btn.setObjectName("option_btn_correct")
                btn.setStyleSheet("""
                    background-color: #2E8B57;
                    color: white;
                """)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–≤–µ—Ç
        if selected_answer == correct_answer:
            self.current_question_index += 1
            QTimer.singleShot(1500, self.load_question)
        else:
            QTimer.singleShot(1500, lambda: self.end_game(False))
    
    def update_timer(self):
        self.seconds_left -= 1
        self.update_timer_display()
        
        if self.seconds_left <= 5:
            self.timer_label.setStyleSheet("background-color: red;")
        
        if self.seconds_left <= 0:
            self.timer.stop()
            self.end_game(False)
    
    def update_timer_display(self):
        self.timer_label.setText(str(self.seconds_left))
    
    def fifty_fifty(self):
        if self.used_5050:
            return
        
        question = self.QUESTIONS[self.current_question_index]
        options = []
        
        # –°–æ–±–∏—Ä–∞–µ–º –≤–∏–¥–∏–º—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã
        for i in range(self.options_layout.count()):
            btn = self.options_layout.itemAt(i).widget()
            if btn.isVisible():
                options.append(btn.text())
        
        wrong_options = [opt for opt in options if opt != question["answer"]]
        to_remove = random.sample(wrong_options, 2)
        
        for i in range(self.options_layout.count()):
            btn = self.options_layout.itemAt(i).widget()
            if btn.text() in to_remove:
                btn.setVisible(False)
        
        self.used_5050 = True
        self.fifty_fifty_btn.setDisabled(True)
    
    def call_friend(self):
        if self.used_call:
            return
        
        question = self.QUESTIONS[self.current_question_index]
        visible_options = []
        
        for i in range(self.options_layout.count()):
            btn = self.options_layout.itemAt(i).widget()
            if btn.isVisible():
                visible_options.append(btn.text())
        
        if random.random() > 0.3:  # 70% chance –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ —Å–æ–≤–µ—Ç–∞
            advice = f"–Ø –¥—É–º–∞—é, —ç—Ç–æ: {question['answer']}"
        else:
            random_option = random.choice(visible_options)
            advice = f"–ú–Ω–µ –∫–∞–∂–µ—Ç—Å—è, —ç—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å {random_option}..."
        
        QMessageBox.information(self, "–ó–≤–æ–Ω–æ–∫ –¥—Ä—É–≥—É", f"üìû –î—Ä—É–≥ –≥–æ–≤–æ—Ä–∏—Ç: \"{advice}\"")
        self.used_call = True
        self.call_friend_btn.setDisabled(True)
    
    def update_prizes_display(self):
        for i in range(self.prizes_list.count()):
            item = self.prizes_list.itemAt(i).widget()
            item.setStyleSheet("")
            
            if i == 4 or i == 8:  # –ù–µ—Å–≥–æ—Ä–∞–µ–º—ã–µ —Å—É–º–º—ã
                item.setStyleSheet("color: orange;")
            
            if i == self.current_question_index:
                item.setStyleSheet("background-color: gold; color: black; font-weight: bold;")
            elif i < self.current_question_index:
                item.setStyleSheet("color: lightgreen;")
    
    def end_game(self, is_win):
        self.timer.stop()
        
        if is_win:
            prize = self.PRIZES[-1]
            QMessageBox.information(self, "–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!", f"üéâ –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ {prize:,} ‚ÇΩ! üéâ")
        else:
            if self.current_question_index > 8:
                prize = self.PRIZES[8]  # 80,000
            elif self.current_question_index > 4:
                prize = self.PRIZES[4]  # 5,000
            else:
                prize = 0
            
            if prize > 0:
                QMessageBox.information(self, "–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞", f"–í–∞—à –≤—ã–∏–≥—Ä—ã—à: {prize:,} ‚ÇΩ")
            else:
                QMessageBox.information(self, "–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞", "–í—ã –Ω–µ –≤—ã–∏–≥—Ä–∞–ª–∏ –Ω–∏—á–µ–≥–æ.")
        
        self.show_screen(self.main_menu)
    
    def confirm_end_game(self):
        reply = QMessageBox.question(self, "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ", 
                                   "–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞–≤–µ—Ä—à–∏—Ç—å –∏–≥—Ä—É?", 
                                   QMessageBox.Yes | QMessageBox.No)
        if reply == QMessageBox.Yes:
            self.end_game(False)
    
    def show_screen(self, screen):
        for i in range(self.stack_layout.count()):
            widget = self.stack_layout.itemAt(i).widget()
            widget.setVisible(widget == screen)

if __name__ == "__main__":
    app = QApplication(sys.argv)
    game = MillionaireGame()
    game.show()
    sys.exit(app.exec_())

